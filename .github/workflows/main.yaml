# name: List services in GCP
# on:
#   push:
#     branches:
#       - main

# permissions:
#   id-token: write
#   contents: read

# jobs:
#   Get_OIDC_ID_token:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - id: "auth"
#         name: "Authenticate to GCP"
#         uses: "google-github-actions/auth@v1"
#         with:
#           workload_identity_provider: "principal://iam.googleapis.com/projects/1000907336307/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
#           service_account: "github-actions@causal-analyst-402006.iam.gserviceaccount.com"

#       # - name: Authenticate gcloud CLI
#       #   run:
#       #       echo $GOOGLE_APPLICATION_CREDENTIALS
#       #       echo ${{ steps.auth.outputs.credentials_file_path}}
#       #       gcloud auth activate-service-account --key-file=${{ steps.auth.outputs.credentials_file_path}}
#       #       gcloud storage ls gs://oidc-test-bucket-example
#       # # - name: "Set up Cloud SDK"
#       # #   uses: "google-github-actions/setup-gcloud@v0"

#       # # - name: "Authenticate gcloud with the service account"
#       # #   run: |
#       # #     gcloud auth activate-service-account --key-file=${{ steps.auth.outputs.credentials_file_path}}

#       # # - name: "Use gcloud CLI"
#       # #   run: "gcloud info"

# # - name: "Get GCS"

name: "Terraform"

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "terraform/**"
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - "terraform/**"
  push:
    branches:
      - main

defaults:
  run:
    working-directory: terraform

env:
  # GCP
  GCP_PROJECT_ID: "causal-analyst-402006" # Update this with your GCP project ID
  GCP_PROJECT_NUMBER: 1000907336307 # Update this with your GCP project number
  GCP_POOL_ID: "github-actions-pool" # Update this with your Workload Identity Pool ID
  GCP_PROVIDER_ID: "github-actions-provider" # Update this with your Workload Identity Provider ID
  GCP_SERVICE_ACCOUNT: "github-actions@causal-analyst-402006.iam.gserviceaccount.com" # Update this with your service account mail address

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup tfcmt
        env:
          TFCMT_VERSION: v4.0.0
        run: |
          wget "https://github.com/suzuki-shunsuke/tfcmt/releases/download/${TFCMT_VERSION}/tfcmt_linux_amd64.tar.gz" -O /tmp/tfcmt.tar.gz
          tar xzf /tmp/tfcmt.tar.gz -C /tmp
          mv /tmp/tfcmt /usr/local/bin
          tfcmt --version

      # - name: Set up Google Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v0.3.0
      #   with:
      #     project_id: ${{ env.GCP_PROJECT_ID }}
      #     version: "latest"

      - name: Authenticate with OIDC
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.GCP_POOL_ID }}/providers/${{ env.GCP_PROVIDER_ID }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt plan -patch -- terraform plan -no-color -input=false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt apply -- terraform apply -auto-approve -input=false
